; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\main.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\main.d --cpu=Cortex-M3 --apcs=interwork -O0 -Otime -I..\Project -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Utilities\stm32_eval -I..\Utilities\stm32_eval\IIC -I..\Utilities\stm32_eval\SPI -I..\Utilities\stm32_eval\AD5933 -I..\Utilities\stm32_eval\wave -I..\Utilities\stm32_eval\delay -I..\Utilities\stm32_eval\calculate -I"D:\Program Files\MDK_5.11\ARM\RV31\INC" -I"D:\Program Files\MDK_5.11\ARM\PACK\ARM\CMSIS\4.1.0\CMSIS\Include" -I"D:\Program Files\MDK_5.11\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include" -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DUSE_STM3210E_EVAL -DIMPVALTEST -W --omf_browse=.\obj\main.crf main.c]
                          THUMB

                          AREA ||i.InitOutput||, CODE, READONLY, ALIGN=2

                  InitOutput PROC
;;;43     *******************************************************************/
;;;44     void InitOutput(void)
000000  2000              MOVS     r0,#0
;;;45     {
;;;46     	uint8_t i;
;;;47       for (i = 0; i < 6; i++)
000002  e02f              B        |L1.100|
                  |L1.4|
;;;48       {
;;;49         CH[i].channel_open = 1;
000004  2101              MOVS     r1,#1
000006  eb000280          ADD      r2,r0,r0,LSL #2
00000a  4b18              LDR      r3,|L1.108|
00000c  eb030282          ADD      r2,r3,r2,LSL #2
000010  72d1              STRB     r1,[r2,#0xb]
;;;50         CH[i].function_code = 0x103;                             
000012  f2401103          MOV      r1,#0x103
000016  eb000280          ADD      r2,r0,r0,LSL #2
00001a  f8231022          STRH     r1,[r3,r2,LSL #2]
;;;51         CH[i].peroid = 500;
00001e  f44f71fa          MOV      r1,#0x1f4
000022  eb000280          ADD      r2,r0,r0,LSL #2
000026  eb030282          ADD      r2,r3,r2,LSL #2
00002a  8051              STRH     r1,[r2,#2]
;;;52         CH[i].ss_peroid = 5 * (CH[i].peroid);
00002c  eb000180          ADD      r1,r0,r0,LSL #2
000030  461a              MOV      r2,r3
000032  eb020181          ADD      r1,r2,r1,LSL #2
000036  8849              LDRH     r1,[r1,#2]
000038  eb010181          ADD      r1,r1,r1,LSL #2
00003c  eb000280          ADD      r2,r0,r0,LSL #2
000040  eb030282          ADD      r2,r3,r2,LSL #2
000044  8091              STRH     r1,[r2,#4]
;;;53         CH[i].scope = 800;
000046  f44f7148          MOV      r1,#0x320
00004a  eb000280          ADD      r2,r0,r0,LSL #2
00004e  eb030282          ADD      r2,r3,r2,LSL #2
000052  80d1              STRH     r1,[r2,#6]
;;;54         CH[i].complex_status = 0;
000054  2100              MOVS     r1,#0
000056  eb000280          ADD      r2,r0,r0,LSL #2
00005a  eb030282          ADD      r2,r3,r2,LSL #2
00005e  7491              STRB     r1,[r2,#0x12]
000060  1c41              ADDS     r1,r0,#1              ;47
000062  b2c8              UXTB     r0,r1                 ;47
                  |L1.100|
000064  2806              CMP      r0,#6                 ;47
000066  dbcd              BLT      |L1.4|
;;;55       }
;;;56     }
000068  4770              BX       lr
;;;57     
                          ENDP

00006a  0000              DCW      0x0000
                  |L1.108|
                          DCD      ||CH||

                          AREA ||i.main||, CODE, READONLY, ALIGN=1

                  main PROC
;;;70     *******************************************************************/
;;;71     int main(int argc, char *argv[])
000000  f7fffffe          BL       STM_EVAL_SYSTEMINIT
;;;72     {   
;;;73     	
;;;74       STM_EVAL_SYSTEMINIT();  	//初始化系统配置
;;;75     //  AD5933_Para_Init();     //初始化阻抗采集参数
;;;76     //  AD5933_Init();          //初始化阻抗采集函数
;;;77     
;;;78     	InitOutput();
000004  f7fffffe          BL       InitOutput
;;;79     	delay_ms(50);
000008  2032              MOVS     r0,#0x32
00000a  f7fffffe          BL       delay_ms
;;;80     //	printf("serial is ok\r\n");
;;;81     
;;;82       while (1)
00000e  e007              B        |L2.32|
                  |L2.16|
;;;83       {  
;;;84       	HandleRecData();			//处理接收队列的数据		
000010  f7fffffe          BL       HandleRecData
;;;85         ReportState(); 				//状态报告控制
000014  f7fffffe          BL       ReportState
;;;86         ErrorCodeLimit();			//错误命令控制
000018  f7fffffe          BL       ErrorCodeLimit
;;;87         RepeatCodeLimit(); 		//重复命令控制
00001c  f7fffffe          BL       RepeatCodeLimit
                  |L2.32|
000020  e7f6              B        |L2.16|
;;;88       }       
;;;89     }
;;;90     
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  kAckBuf
                          %        98

                          AREA ||.data||, DATA, ALIGN=0

                  order
                          DCDU     0x00000000
000004  0000              DCB      0x00,0x00
                  ch_num
000006  00                DCB      0x00
                  count
000007  00                DCB      0x00

                  __ARM_use_no_argv EQU 0
